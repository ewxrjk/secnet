dnl Process this file with autoconf to produce a configure script.

dnl This file is part of secnet.
dnl See README for full list of copyright holders.
dnl
dnl secnet is free software; you can redistribute it and/or modify it
dnl under the terms of the GNU General Public License as published by
dnl the Free Software Foundation; either version d of the License, or
dnl (at your option) any later version.
dnl 
dnl secnet is distributed in the hope that it will be useful, but
dnl WITHOUT ANY WARRANTY; without even the implied warranty of
dnl MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
dnl General Public License for more details.
dnl 
dnl You should have received a copy of the GNU General Public License
dnl version 3 along with secnet; if not, see
dnl https://www.gnu.org/licenses/gpl.html.

sinclude(ac_prog_cc_no_writeable_strings.m4)

AC_INIT(secnet,0.1.18+,secnet@chiark.greenend.org.uk)
AC_CONFIG_SRCDIR(secnet.c)
AC_CONFIG_HEADER(config.h)

AC_PREREQ(2.50)
AC_REVISION($Id: configure.in,v 1.4 2002/09/09 22:05:02 steve Exp $)

AC_LANG_C

# If fink is on the path then it is assumed we should use it.
AC_PATH_PROG([FINK],[fink])
if test "x$FINK" != x; then
  finkdir=`echo $FINK|sed 's,/[[^/]]*/[[^/]]*$,,'`
  CPPFLAGS="-I$finkdir/include ${CPPFLAGS}"
  LDFLAGS="-L$finkdir/lib ${LDFLAGS}"
fi

AC_PROG_MAKE_SET
AC_PROG_CC
AC_PROG_INSTALL
AC_PATH_PROG(RM,rm)
AC_STDC_HEADERS
AC_CHECK_HEADERS([stdint.h inttypes.h])
AC_CHECK_HEADERS([net/if.h net/route.h])
AC_CHECK_HEADERS([sys/socket.h])
AC_CHECK_HEADERS([linux/if_tun.h], [], [], 
[#if HAVE_SYS_SOCKET_H
# include <sys/socket.h>
#endif
])
AC_CHECK_HEADERS([stropts.h sys/sockio.h net/if_tun.h])
AC_C_BIGENDIAN
AC_CHECK_SIZEOF(unsigned long long)
AC_CHECK_SIZEOF(unsigned long)
AC_CHECK_SIZEOF(unsigned int)
AC_CHECK_SIZEOF(unsigned short)
AC_CHECK_SIZEOF(unsigned char)
AC_PROG_CC_NO_WRITEABLE_STRINGS(WRITESTRINGS)

AC_ARG_ENABLE(hacky-parallel,
  [AS_HELP_STRING([--enable-hacky-parallel],
                  [parallelise slow cryptography (default is no)])], [
  case "$enableval" in
  n|0|no) ;;
  y|1|yes) CFLAGS="$CFLAGS -DHACKY_PARALLEL" ;;
  *) ;;
  esac
])

AC_DEFUN([REQUIRE_HEADER],[AC_CHECK_HEADER($1,,[AC_MSG_ERROR($1 not found)])])

dnl the order in which libraries is checked is important
dnl eg. adns on Solaris 2.5.1 depends on -lnsl and -lsocket
AC_CHECK_LIB(gmp,mpz_init_set_str)
AC_CHECK_LIB(gmp2,mpz_init_set_str)
AC_CHECK_LIB(gmp,__gmpz_init_set_str)
REQUIRE_HEADER([gmp.h])
dnl Would love to barf if no gmp was found, but how to test? Requiring the header will do for now.
AC_CHECK_LIB(fl,yywrap)
if test "$ac_cv_lib_fl_yywrap" != yes; then
  AC_MSG_ERROR([A compatible libfl is required])
fi
AC_CHECK_LIB(nsl,inet_ntoa)
AC_CHECK_LIB(socket,socket)
ADNS_C_GETFUNC(inet_aton,resolv,[
 LIBS="-lresolv $LIBS";
 AC_MSG_WARN([inet_aton is in libresolv, urgh.  Must use -lresolv.])
])
AC_CHECK_LIB(adns,adns_init)
REQUIRE_HEADER([adns.h])

AC_MSG_NOTICE([Checking requirements for IPv6 support...])
enable_ipv6=true
m4_define(NO_IPV6,[enable_ipv6=false])
AC_CHECK_DECL(AF_INET6,        [],[NO_IPV6],[#include <netinet/in.h>])
AC_CHECK_FUNC(adns_addr2text,  [],[NO_IPV6])
if $enable_ipv6; then
    AC_MSG_NOTICE([Enabling IPv6 support])
    AC_DEFINE(CONFIG_IPV6, 1,
              [Define to 1 to use IPv6 support in system and adns])
else
    AC_MSG_WARN([Disabling IPv6 support])
fi

AC_OUTPUT(Makefile,echo timestamp >stamp-h)

AH_TOP([
#ifndef _CONFIG_H
#define _CONFIG_H
])

AH_BOTTOM([
/* -*- c -*- */

/* These used to be in config.h.bot, but are now in configure.in. */

#ifdef HAVE_INTTYPES_H
#include <inttypes.h>
#else
#ifdef HAVE_STDINT_H
#include <stdint.h>
#else
#if SIZEOF_UNSIGNED_LONG_LONG==8
typedef unsigned long long uint64_t;
typedef long long int64_t;
#elif SIZEOF_UNSIGNED_LONG==8
typedef unsigned long uint64_t;
typedef long int64_t;
#else
#error I do not know what to use for a uint64_t.
#endif

/* Give us an unsigned 32-bit data type. */
#if SIZEOF_UNSIGNED_LONG==4
typedef unsigned long uint32_t;
typedef long int32_t;
#elif SIZEOF_UNSIGNED_INT==4
typedef unsigned int uint32_t;
typedef int int32_t;
#else
#error I do not know what to use for a uint32_t.
#endif

/* An unsigned 16-bit data type. */
#if SIZEOF_UNSIGNED_INT==2
typedef unsigned int uint16_t;
typedef int int16_t;
#elif SIZEOF_UNSIGNED_SHORT==2
typedef unsigned short uint16_t;
typedef short int16_t;
#else
#error I do not know what to use for a uint16_t.
#endif

/* An unsigned 8-bit data type */
#if SIZEOF_UNSIGNED_CHAR==1
typedef unsigned char uint8_t;
#else
#error I do not know what to use for a uint8_t.
#endif
#endif
#endif

#ifdef __GNUC__
#define NORETURN(_x) void _x __attribute__ ((noreturn))
#define FORMAT(_a,_b,_c) __attribute__ ((format (_a,_b,_c)))
#else
#define NORETURN(_x) _x
#define FORMAT(_a,_b,_c)
#endif

#endif /* _CONFIG_H */
])
