
CONFIGURE	?= configure
CONFIGURE_AC 	?= $(CONFIGURE).ac
CONFIG_STATUS 	?= config.status

CONFIGURE_ACS 	+= $(CONFIGURE_AC)
CONFIGURE_ACS 	+= subdirmk/subdirmk.ac

$(top_srcdir)/$(CONFIGURE): $(addprefix $(top_srcdir)/,$(CONFIGURE_ACS))
	cd $(top_srcdir) && autoconf

$(CONFIG_STATUS): $(top_srcdir)/$(CONFIGURE)
	./$(CONFIG_STATUS) --recheck

MAKEFILES += subdirmk/regen.mk

MAKEFILE_TEMPLATES += $(top_srcdir)/Perdir.mk.in

main.mk $(MAKEFILES): .makefiles.stamp ;
.makefiles.stamp: 						\
		$(top_srcdir)/subdirmk/generate			\
		$(CONFIG_STATUS)				\
		$(MAKEFILE_TEMPLATES)				\
		$(foreach m,$(MAKEFILES),$(top_srcdir)/$(m).in)
# This filtering arranges that we can often run config.status to
# generate only particular output files.  We look for *inputs* that
# have changed.  If the only inputs that have changed are ones that we
# know affect only one output (Subdir.mk.in and regen.mk.in), we pass
# config.status the corresponding output file names.  Otherwise we
# pass nothing and config.status does them all.  We need to mention
# regen.mk.in twice because if $(top_srcdir) is `.', make elides the
# directory part from $?.
	./$(CONFIG_STATUS) $(if					\
		$(filter-out Subdir.mk.in %/Subdir.mk.in	\
			subdirmk/regen.mk.in			\
			$(top_srcdir)/subdirmk/regen.mk.in	\
			, $?),,					\
		$(patsubst %.mk.in,%.mk,$(filter %.mk.in,$?)))
	touch $@

realclean:: clean
	$(RM) config.status config.log
	$(RM) main.mk subdirmk/regen.mk $(MAKEFILES)
	$(RM) $(addsuffix Makefile,$(dir $(MAKEFILES)))

-include $(ALL_DEPFILES)
